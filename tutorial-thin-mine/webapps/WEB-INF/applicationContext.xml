<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

<!-- アプリケーション全体のBean定義 -->

<!-- ======================================== 各種フィルタコントローラ定義 -->
  <!-- ログオン済みチェック設定 -->
  <bean id="tutorialAuthenticationController"
        class="jp.terasoluna.thin.tutorial.web.common.controller.TutorialAuthController"/>

<!-- ======================================== データソース定義 -->
  <!-- 
     WTPを利用してTomcatを起動する場合、<ContextRoot>/META-INF/context.xmlに
     データソースの接続情報を設定する。
     またTomcatでJDBC接続を行う場合、各種JDBCドライバのjarにクラスパスを通すこと。
  -->
  <bean id="TerasolunaSampleDataSource"
        class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName">
	  <!-- Tomcatの例  -->
      <value>java:comp/env/jdbc/TerasolunaSampleDataSource</value>
    </property>
  </bean>

<!-- ======================================== トランザクション・AOP定義 -->
  <!-- トランザクションマネージャの定義 -->
  <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="TerasolunaSampleDataSource" />
  </bean>

<!-- トランザクション使いまわし試験用 -->
<tx:advice id="transactionInterceptor" >
    <tx:attributes>
      <tx:method name="execute*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="insert*"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="update*"  propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
      <tx:method name="delete*"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
      <tx:method name="select*"  propagation="REQUIRED" rollback-for="java.lang.Exception" read-only="true"/>
<!--       <tx:method name="execute*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>-->
    </tx:attributes>
  </tx:advice>
<!-- トランザクション使いまわし試験用ここまで -->


  <!-- AOPの定義 -->
  <!-- 
    下記で指定したパターンのBeanに対してインタセプタを適用する。
    applicationContext.xmlで定義されたBeanのみ対象となるので注意すること。
   -->
   <aop:config>
    <aop:pointcut id="actionBeans"  expression="bean(/transaction/*)"/>
    <aop:pointcut id="sampleBeans" expression="bean(*BLogic2)"/>
    <aop:pointcut id="blogicBeans"  expression="bean(*BLogic)"/>
    <aop:pointcut id="daoBeans"     expression="bean(*DAO)"/>
   <aop:advisor
         pointcut-ref="actionBeans"
         advice-ref="transactionInterceptor"/>
    <aop:advisor
         pointcut-ref="sampleBeans"
         advice-ref="transactionInterceptor"/>
    <aop:advisor
         pointcut-ref="blogicBeans"
         advice-ref="transactionInterceptor"/>
    <aop:advisor
         pointcut-ref="daoBeans"
         advice-ref="transactionInterceptor"/>

  </aop:config>

  
<!-- ======================================== リソースバンドル定義 -->
  <!-- プロパティファイル利用 -->
  <!-- 
    basenamesプロパティでメッセージプロパティファイルを設定する。
   -->  
  <bean id="messageSource" 
        class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames" value="application-messages, system-messages"/>
  </bean>

<!-- ======================================== iBATIS定義 -->
  <!-- SqlMap定義 -->
  <bean id="sqlMapClient"
        class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    <property name="configLocation" value="WEB-INF/sqlMapConfig.xml">
    </property>
    <property name="dataSource" ref="TerasolunaSampleDataSource" />
  </bean>

   <!-- 照会系のDAO定義 -->
  <bean id="queryDAO" 
        class="jp.terasoluna.fw.dao.ibatis.QueryDAOiBatisImpl">
    <property name="sqlMapClient" ref="sqlMapClient" />
  </bean>
  
  <!-- 更新系のDAO定義 -->
  <bean id="updateDAO"
        class="jp.terasoluna.fw.dao.ibatis.UpdateDAOiBatisImpl">
    <property name="sqlMapClient" ref="sqlMapClient" />
  </bean>
  
  <!-- ストアドプロシジャ用のDAO定義 -->
  <bean id="spDAO"
        class="jp.terasoluna.fw.dao.ibatis.StoredProcedureDAOiBatisImpl">
    <property name="sqlMapClient" ref="sqlMapClient" />
  </bean>
  
</beans>
